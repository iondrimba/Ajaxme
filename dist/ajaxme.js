!function(root,factory){"object"==typeof exports?module.exports=factory():"function"==typeof define&&define.amd?define([],function(){return root.AjaxMe=factory()}):root.AjaxMe=factory()}(this,function(){"use strict";function addCallBacks(request,options){console.log("addCallBacks"),request.onload=function(evt){request.status>=200&&request.status<400||request.responseText?options.success(request):options.error(evt)},request.onerror=function(evt){console.log("onerror",evt.error),options.error(evt)},request.onabort=function(evt){console.log("onabort"),options.abort&&options.abort(evt)},request.onloadend=function(evt){console.log("onloadend",request,evt),options.loadend&&options.loadend(evt)},request.onloadstart=function(evt){console.log("onloadstart",request,evt),options.loadstart&&options.loadstart(evt)},request.onprogress=function(evt){var percentComplete=0;options.progress&&(evt.lengthComputable&&(percentComplete=evt.loaded/evt.total),evt.percent=percentComplete,options.progress(evt))}}function setupRequest(request,options){console.log("options.url",options.url),request.open("POST",options.url,!0),request.setRequestHeader("Content-Type",options.contentType+"; charset=UTF-8"),request.send(options.data)}function AjaxMe(){}return AjaxMe.prototype.post=function(options){var request=new XMLHttpRequest,contentType="application/x-www-form-urlencoded";options.json&&(contentType="application/json");var request=new XMLHttpRequest;return options.contentType=contentType,addCallBacks(request,options),setupRequest(request,options),request},AjaxMe.prototype.upload=function(options){var request=new XMLHttpRequest,contentType="multipart/form-data",request=new XMLHttpRequest;return options.contentType=contentType,setupRequest(request,options),addCallBacks(request,options),request},AjaxMe.prototype.get=function(options){var request=new XMLHttpRequest;return request.open("GET",options.url,!0),addCallBacks(request,options),request.send(),request},new AjaxMe});